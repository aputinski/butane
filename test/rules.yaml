.functions:
  isAuthed(): auth !== null
  hasGame(game): root.games.hasChild(game)
  hasPlayer(game): root.games[game].players.hasChild(auth.uid)
  getPlayer(game): root.games[game].players[auth.uid]
  isPlayer(player): player === auth.uid
  createOnly(): "!prev.exists() && next.exists()"

rules:

  cards:
    .read: isAuthed()

  games:
    $game:

      __timestamp:
        .read: next === 12345
        .write: true

      cards:
        .read: hasPlayer($game)
        .write: hasPlayer($game)

      players:
        $player:
          .read: hasPlayer($game)
          .write: hasGame($game) &&
                  ^$game['settings/started'] === false &&
                  $player == auth.uid &&
                  (!prev.exists() || next === true) &&
                  newData.exits()
          name:
            .validate: next.isString()
          cards:
            .write: $player === auth.uid

      player-names:
        .read: hasPlayer($game)

        $player:
          .write: (!hasPlayer($game) || isPlayer(^$game.settings.creator)) &&
                  createOnly()
