# This file is a kitchen sinks of tests, and not a practical
# security rules file.
#
# Please only ADD new items and update the expected result
# in the rules.json file

.functions:
  isAuthed(): auth !== null
  hasGame(game): root.games.hasChild(game)
  hasPlayer(game): root.games[game].players.hasChild(auth.uid)
  getPlayer(game): root.games[game].players[auth.uid]
  isPlayer(player): player === auth.uid
  createOnly(): next.exists() && !prev.exists()
  isString(snapshot, path): snapshot[path].isString()

rules:

  cards:
    .read: isAuthed()

  games:
    $game:

      settings:
        timestamp:
          .read: true
          .write: next === 12345
        started:
          .write: oneOf(true,false)

      meta:
        .write: oneOf(['foo','bar'], 'next.title')

      cards:
        .read: hasPlayer($game)
        .write: hasPlayer($game)

      players:
        $player:
          .read: hasPlayer($game)
          .write: hasGame($game) &&
                  ^$game['settings/started'] === false &&
                  $player == auth.uid &&
                  (!prev.exists() || next === true) &&
                  newData.exists()
          .validate: isString(next,'name')

          name:
            .validate: next.isString()
          cards:
            .write: $player === auth.uid

      player-names:
        .read: hasPlayer($game)

        $player:
          .write: (!hasPlayer($game) || isPlayer(^$game.settings.creator)) &&
                  createOnly()
